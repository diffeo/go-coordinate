version: 2
jobs:
  build:
    working_directory: /go/src/github.com/diffeo/go-coordinate
    docker:
      - image: circleci/golang:1.12
      - image: postgres:9.6
    environment:
      TEST_RESULTS: /tmp/test-results
      GO111MODULE: 'on'
    steps:
      - checkout

      - run: git describe HEAD

      - type: setup_remote_docker
        reusable: true

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - v1-pkg-cache

      - run:
          name: Install tools
          environment:
            GO111MODULE: 'off'
          command: |
            go get golang.org/x/lint/golint
            go get github.com/jstemmer/go-junit-report

      - run:
          name: Install dependencies
          command: |
            # Install source dependencies.
            go mod tidy -v

      - run:
          name: Ensure dependency specification is up to date.
          # "go mod tidy" should not cause updates to the config.
          command: git diff --name-only --exit-code

      - save_cache: # Store cache in the /go/pkg directory
          key: v1-pkg-cache
          paths:
            - /go/pkg

      - run:
          name: Install Go packages
          command: go install -v ./...

      - run:
          name: Setup docker build
          command: |
            mkdir -p build
            cd build
            ../setup.sh

      - run:
          name: Build docker image
          command: |
            docker build -t diffeo/coordinated:$(cat build/container-version) build/
            docker images

      - run:
          name: Run linters
          # TODO: Switch golint to ./... - https://github.com/golang/lint/issues/320
          command: |
            go list ./... | grep -v /vendor/ | xargs -L1 golint
            go vet -x ./...

      - run:
          name: Run basic tests
          command: |
            mkdir -p "${TEST_RESULTS}"
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            make test | tee ${TEST_RESULTS}/go-test.out
          environment:
            PGHOST: 127.0.0.1
            PGUSER: postgres
            PGSSLMODE: disable

      - deploy:
          name: Push master and tagged images to Docker repository
          command: |
            # If we aren't on master and also not on a tag, this deployment does not run.
            if [ "$CIRCLE_BRANCH" != "master" ] && [ -z "$CIRCLE_TAG" ]; then
              echo "Skipping push on non-master,tag build."
              exit 0
            fi

            # Login to docker registry
            docker login -u "$DOCKER_HUB_USER" -p "$DOCKER_HUB_PASS"

            # Push image to our repository
            docker push diffeo/coordinated:$(cat build/container-version)
            # Push a "latest" tag to our repository
            docker tag diffeo/coordinated:$(cat build/container-version) diffeo/coordinated:latest
            docker push diffeo/coordinated:latest

workflows:
  version: 2
  build:
    jobs:
      - build:
          filters:
            tags:
              only: /^[0-9]+[.][0-9]+[.][0-9]+.*/
